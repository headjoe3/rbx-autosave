<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Workspace" referent="RBX2A4013B40C69444BB08F3A4FF4BBD564">
		<Properties>
			<bool name="AllowThirdPartySales">false</bool>
			<string name="CollisionGroups">Default^0^1</string>
			<Ref name="CurrentCamera">RBX27636FEC3F7B49E5845A5BD272907FDC</Ref>
			<double name="DistributedGameTime">0</double>
			<bool name="ExplicitAutoJoints">true</bool>
			<float name="FallenPartsDestroyHeight">-500</float>
			<bool name="FilteringEnabled">true</bool>
			<float name="Gravity">196.199997</float>
			<CoordinateFrame name="ModelInPrimary">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<string name="Name">Workspace</string>
			<Ref name="PrimaryPart">null</Ref>
			<bool name="StreamingEnabled">false</bool>
			<int name="StreamingMinRadius">64</int>
			<token name="StreamingPauseMode">0</token>
			<int name="StreamingTargetRadius">1024</int>
			<BinaryString name="Tags"></BinaryString>
			<bool name="TemporaryLegacyPhysicsSolverOverrideStreaming">false</bool>
			<bool name="TerrainWeldsFixed">true</bool>
		</Properties>
		<Item class="Camera" referent="RBX27636FEC3F7B49E5845A5BD272907FDC">
			<Properties>
				<CoordinateFrame name="CFrame">
					<X>-8.14222527</X>
					<Y>7.21765184</Y>
					<Z>11.0308924</Z>
					<R00>0.146346837</R00>
					<R01>0.293998897</R01>
					<R02>-0.944535494</R02>
					<R10>-0</R10>
					<R11>0.954815745</R11>
					<R12>0.297198713</R12>
					<R20>0.989233434</R20>
					<R21>-0.0434940904</R21>
					<R22>0.139734238</R22>
				</CoordinateFrame>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-6.2531538</X>
					<Y>6.6232543</Y>
					<Z>10.7514238</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="HeadLocked">true</bool>
				<float name="HeadScale">1</float>
				<string name="Name">Camera</string>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX2E584E5CB9424C6BBC5329F57B69E921">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>-10</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CastShadow">true</bool>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4284702562</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="Name">Baseplate</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">0</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>512</X>
					<Y>20</Y>
					<Z>512</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Terrain" referent="RBXB1DF5E20561648738648B50CAEEF53DC">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CastShadow">true</bool>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<BinaryString name="MaterialColors"><![CDATA[AAAAAAAAan8/P39rf2Y/ilY+j35fi21PZmxvZbDqw8faiVpHOi4kHh4lZlw76JxKc3trhHta
gcLgc4RKxr21zq2UlJSM]]></BinaryString>
				<string name="Name">Terrain</string>
				<BinaryString name="PhysicsGrid">AgMAAAAAAAAAAAAAAAA=</BinaryString>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<BinaryString name="SmoothGrid">AQU=</BinaryString>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Color3 name="WaterColor">
					<R>0.0470588282</R>
					<G>0.329411775</G>
					<B>0.360784322</B>
				</Color3>
				<float name="WaterReflectance">1</float>
				<float name="WaterTransparency">0.300000012</float>
				<float name="WaterWaveSize">0.150000006</float>
				<float name="WaterWaveSpeed">10</float>
				<Vector3 name="size">
					<X>2044</X>
					<Y>252</Y>
					<Z>2044</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="MeshPart" referent="RBX4D874985A2E2487FA661B6DBB270A44D">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>10.3728018</X>
					<Y>0.846862018</Y>
					<Z>8.41113186</Z>
					<R00>1.31134158e-07</R00>
					<R01>0</R01>
					<R02>-1</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>1</R20>
					<R21>0</R21>
					<R22>1.31134158e-07</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CastShadow">true</bool>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4294945280</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<Vector3 name="InitialSize">
					<X>3.18738174</X>
					<Y>3.18738151</Y>
					<Z>3.18738151</Z>
				</Vector3>
				<BinaryString name="LODData"></BinaryString>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">1568</token>
				<Content name="MeshID"><url>rbxassetid://4133379922</url></Content>
				<Content name="MeshId"><url>rbxassetid://4133379922</url></Content>
				<string name="Name">Handle</string>
				<SharedString name="PhysicalConfigData">c3gK/I1fs0aWnxIersNQuw==</SharedString>
				<BinaryString name="PhysicsData"></BinaryString>
				<float name="Reflectance">0</float>
				<token name="RenderFidelity">1</token>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<BinaryString name="Tags"></BinaryString>
				<Content name="TextureID"><null></null></Content>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>1.59369087</X>
					<Y>1.59369075</Y>
					<Z>1.59369075</Z>
				</Vector3>
			</Properties>
		</Item>
	</Item>
	<Item class="SoundService" referent="RBX13D2E976FC5A4C8588B357CE0C57C88B">
		<Properties>
			<token name="AmbientReverb">0</token>
			<float name="DistanceFactor">3.32999992</float>
			<float name="DopplerScale">1</float>
			<string name="Name">SoundService</string>
			<bool name="RespectFilteringEnabled">true</bool>
			<float name="RolloffScale">1</float>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="NonReplicatedCSGDictionaryService" referent="RBXCCD390143C6A493C9E114EA8EA1CAB4E">
		<Properties>
			<string name="Name">NonReplicatedCSGDictionaryService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="CSGDictionaryService" referent="RBX980F621AA91D4F4E8E118A3FB5C6FDA4">
		<Properties>
			<string name="Name">CSGDictionaryService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="Chat" referent="RBXCD8B77E5316B440CAF97156EB23683E6">
		<Properties>
			<bool name="BubbleChatEnabled">false</bool>
			<bool name="LoadDefaultChat">true</bool>
			<string name="Name">Chat</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="TimerService" referent="RBX0B84E46908B04139A8917CEFADAFFA44">
		<Properties>
			<string name="Name">Instance</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="Players" referent="RBX703570FB14C54EBEBF51A268C124CA9E">
		<Properties>
			<bool name="CharacterAutoLoads">true</bool>
			<int name="MaxPlayersInternal">12</int>
			<string name="Name">Players</string>
			<int name="PreferredPlayersInternal">56832</int>
			<float name="RespawnTime">5</float>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="ReplicatedFirst" referent="RBX0F3B9F87FC7741E594997A8B70DFA4D3">
		<Properties>
			<string name="Name">ReplicatedFirst</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="TweenService" referent="RBX838F3801B3AC440C9150B32501FDDAE7">
		<Properties>
			<string name="Name">TweenService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="StarterPlayer" referent="RBX050F2966658A41C38099F5CF9997372F">
		<Properties>
			<bool name="AllowCustomAnimations">true</bool>
			<bool name="AutoJumpEnabled">true</bool>
			<float name="CameraMaxZoomDistance">128</float>
			<float name="CameraMinZoomDistance">0.5</float>
			<token name="CameraMode">0</token>
			<float name="CharacterJumpHeight">7.19999981</float>
			<float name="CharacterJumpPower">50</float>
			<float name="CharacterMaxSlopeAngle">89</float>
			<bool name="CharacterUseJumpPower">true</bool>
			<float name="CharacterWalkSpeed">16</float>
			<token name="DevCameraOcclusionMode">0</token>
			<token name="DevComputerCameraMovementMode">0</token>
			<token name="DevComputerMovementMode">0</token>
			<token name="DevTouchCameraMovementMode">0</token>
			<token name="DevTouchMovementMode">0</token>
			<bool name="EnableMouseLockOption">true</bool>
			<int64 name="GameSettingsAssetIDFace">0</int64>
			<int64 name="GameSettingsAssetIDHead">0</int64>
			<int64 name="GameSettingsAssetIDLeftArm">0</int64>
			<int64 name="GameSettingsAssetIDLeftLeg">0</int64>
			<int64 name="GameSettingsAssetIDPants">0</int64>
			<int64 name="GameSettingsAssetIDRightArm">0</int64>
			<int64 name="GameSettingsAssetIDRightLeg">0</int64>
			<int64 name="GameSettingsAssetIDShirt">0</int64>
			<int64 name="GameSettingsAssetIDTeeShirt">0</int64>
			<int64 name="GameSettingsAssetIDTorso">0</int64>
			<token name="GameSettingsAvatar">1</token>
			<token name="GameSettingsR15Collision">0</token>
			<NumberRange name="GameSettingsScaleRangeBodyType">0 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeHead">0.95 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeHeight">0.9 1.05 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeProportion">0 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeWidth">0.7 1 </NumberRange>
			<float name="HealthDisplayDistance">100</float>
			<bool name="LoadCharacterAppearance">true</bool>
			<string name="Name">StarterPlayer</string>
			<float name="NameDisplayDistance">100</float>
			<BinaryString name="Tags"></BinaryString>
			<bool name="UserEmotesEnabled">true</bool>
		</Properties>
		<Item class="StarterPlayerScripts" referent="RBXAC00C8D1D93144AC92247F9CF0EEE78B">
			<Properties>
				<string name="Name">StarterPlayerScripts</string>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="StarterCharacterScripts" referent="RBXB524736ED763469592F4989E2F364380">
			<Properties>
				<string name="Name">StarterCharacterScripts</string>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
	</Item>
	<Item class="StarterPack" referent="RBX28D2939D55F74A94B6957D70C5DE839D">
		<Properties>
			<string name="Name">StarterPack</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="StarterGui" referent="RBX7D2D29FBD2B940479F504959EA2C11AA">
		<Properties>
			<string name="Name">StarterGui</string>
			<bool name="ResetPlayerGuiOnSpawn">true</bool>
			<token name="ScreenOrientation">2</token>
			<bool name="ShowDevelopmentGui">true</bool>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="LocalizationService" referent="RBX093659DAEE5046D783418C20FACD5533">
		<Properties>
			<string name="Name">LocalizationService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="TeleportService" referent="RBX16550D069B02441E88ED22F106C7E3AB">
		<Properties>
			<string name="Name">Teleport Service</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="CollectionService" referent="RBXB89BAA5A195846C6B0F3555FB3362E8B">
		<Properties>
			<string name="Name">CollectionService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="PhysicsService" referent="RBX558F64128F2E448EB0FECA8E438F90EA">
		<Properties>
			<string name="Name">PhysicsService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="Geometry" referent="RBXABA836835CD347808C60B70FE829C270">
		<Properties>
			<string name="Name">Geometry</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="InsertService" referent="RBXBAE6774BC30B4CBB8B5700B4E9F84BA2">
		<Properties>
			<bool name="AllowClientInsertModels">false</bool>
			<bool name="AllowInsertFreeModels">false</bool>
			<string name="Name">InsertService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="GamePassService" referent="RBX2BED7EE9BBCF4E23B3CD306C3B8E410E">
		<Properties>
			<string name="Name">GamePassService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="Debris" referent="RBX608E48B919394D2B87C1D62B17CEACF8">
		<Properties>
			<int name="MaxItems">1000</int>
			<string name="Name">Debris</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="CookiesService" referent="RBXA926F0E03C04458C91CC00A296352523">
		<Properties>
			<string name="Name">CookiesService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="VRService" referent="RBX3534F0E221D24486907E1E712800C11C">
		<Properties>
			<string name="Name">VRService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="ContextActionService" referent="RBX3D3C110338B74DA3848B15185B5B64B5">
		<Properties>
			<string name="Name">ContextActionService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="ScriptService" referent="RBXCBD9040F461445D88731E5A2B57B3A45">
		<Properties>
			<string name="Name">Instance</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="AssetService" referent="RBXA213C73F8E7C4C79865E225DD1CEE5FA">
		<Properties>
			<string name="Name">AssetService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="TouchInputService" referent="RBXB6A6E005E63C4109867AE608CCD89A47">
		<Properties>
			<string name="Name">TouchInputService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="Selection" referent="RBXD1E77A80A68D4FB0AF4FB66E7982DE19">
		<Properties>
			<string name="Name">Selection</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="ServerScriptService" referent="RBX2B0BA1E8D4394B9AA65B97603DE712B9">
		<Properties>
			<bool name="LoadStringEnabled">true</bool>
			<string name="Name">ServerScriptService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="ServerStorage" referent="RBX14C0F023B8F14EA6908FF77A8A04AC79">
		<Properties>
			<string name="Name">ServerStorage</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="ReplicatedStorage" referent="RBX35AC2838D21B468EA6A08FC03814A0F4">
		<Properties>
			<string name="Name">ReplicatedStorage</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
		<Item class="Folder" referent="RBX533BCE877A944562AE808D2F99CC8501">
			<Properties>
				<string name="Name">Autosave</string>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="Script" referent="RBXB9E3811012794051989BC6F78FEC0036">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">EntryPoint</string>
					<string name="ScriptGuid">{E29DA005-8097-4F55-A290-4AE33BEACB3A}</string>
					<ProtectedString name="Source"><![CDATA[local GetRbxApi = require(script.Parent.Util.GetRbxApi)
local RbxXmlSerializer = require(script.Parent.Util.RbxXmlSerializer)

local MAX_STRING_ASSIGNMENT_SIZE = 199999

local function formatFileSize(bytes)
	if bytes > 1000 ^ 3 then
		return string.format('%0.1fGB', bytes/1000 ^ 3)
	elseif bytes > 1000 ^ 2 then
		return string.format('%0.1fMB', bytes/1000 ^ 2)
	elseif bytes > 1000 then
		return string.format('%0.1fKB', bytes/1000)
	else
		return string.format('%dB', bytes)
	end
end

GetRbxApi.FetchApi(function(success, errType, errMessage)
	for i = 5, 1, -1 do
		print("Saving in", i, "seconds...")
		wait(1)
	end
	
	if not success then
		error("[" .. errType .. "]: " .. errMessage)
	end
	
	print("Saving...")
	local startTick = tick()
	local autosave = RbxXmlSerializer.new(60)
	autosave:SerializeGameSync()
	print(
		"Serialized in", (autosave:GetCompletionTime()), " seconds;",
		"Finalizing (concatenating " .. #autosave.resultStrs .. " chunks) ..."
	)
	
	-- This will cause a lag spike. To Should be sent off to a server in chunks instead.
	local autosaveXml = autosave:ConcatenateResults()
	print("Done! Finished in", tick() - startTick, "seconds; file size:", formatFileSize(#autosaveXml))
	
	for i = 1, math.ceil(#autosaveXml / MAX_STRING_ASSIGNMENT_SIZE) do
		local autosaveModule = Instance.new('ModuleScript', workspace)
		autosaveModule.Name = 'Autosave' .. i
		autosaveModule.Source = autosaveXml:sub(MAX_STRING_ASSIGNMENT_SIZE * (i - 1) + 1, MAX_STRING_ASSIGNMENT_SIZE * i)
	end
end)]]></ProtectedString>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="Folder" referent="RBX35CAE28A859142E2B6282F5CC9BF6440">
				<Properties>
					<string name="Name">Util</string>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="ModuleScript" referent="RBXEF1DCB51E0EA443A9134104C7E77B26B">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">GetRbxApi</string>
						<string name="ScriptGuid">{13302A85-2AA5-4951-AA2D-83161F8CBDB2}</string>
						<ProtectedString name="Source"><![CDATA[local GET_API_DUMP_URL = "https://raw.githubusercontent.com/CloneTrooper1019/Roblox-Client-Tracker/roblox/API-Dump.json"
local FastSpawn = require(script.Parent.FastSpawn)
local HttpService = game:GetService('HttpService')

local GetRbxApi = {}

GetRbxApi.ERRORS = {
	HTTP_REQUESTS_NOT_ENABLED = 'HTTP_REQUESTS_NOT_ENABLED',
	HTTP_ERROR = 'HTTP_ERROR',
	JSON_PARSE_ERROR = 'JSON_PARSE_ERROR',
	API_MAPPING_ERROR = 'API_MAPPING_ERROR',
}

local cacheLoaded = false
local cache = {}

function GetRbxApi.FetchApi(cb)
	FastSpawn(function()
--		if not HttpService.HttpEnabled then
--			cb(
--				false,
--				GetRbxApi.ERRORS.HTTP_NOT_ENABLED,
--				'Http requests are not enabled. Enable via game settings'
--			)
--			return
--		end
		
		local errType
		local success, errOrReturn = pcall(function()
			errType = GetRbxApi.ERRORS.HTTP_ERROR
			
			local apiRaw = HttpService:GetAsync(GET_API_DUMP_URL)
			
			errType = GetRbxApi.ERRORS.JSON_PARSE_ERROR
			local apiParsed = HttpService:JSONDecode(apiRaw)
			
			errType = GetRbxApi.ERRORS.API_MAPPING_ERROR
			local apiMapped = {}
			apiMapped.Version = apiParsed.Version
			apiMapped.Enums = apiParsed.Enums
			apiMapped.Classes = apiParsed.Classes
			
			apiMapped.ClassNameMetadataMap = {}
			for i = 1, #apiParsed.Classes do
				local classMetadata = apiParsed.Classes[i]
				apiMapped.ClassNameMetadataMap[classMetadata.Name] = classMetadata
			end
			
			apiMapped.ClassNameFullMembersMap = {}
			local function mapFullMembers(classMetadata)
				local fullMembers = {}
				for i = 1, #classMetadata.Members do
					fullMembers[i] = classMetadata.Members[i]
				end
				
				if classMetadata.Superclass and classMetadata.Superclass ~= '<<<ROOT>>>' then
					local superclassFullMembers = apiMapped.ClassNameFullMembersMap[classMetadata.Superclass]
					if not superclassFullMembers then
						superclassFullMembers = mapFullMembers(apiMapped.ClassNameMetadataMap[classMetadata.Superclass])
					end
					
					for i = 1, #superclassFullMembers do
						fullMembers[#fullMembers + 1] = superclassFullMembers[i]
					end
				end
				
				apiMapped.ClassNameFullMembersMap[classMetadata.Name] = fullMembers
				return fullMembers
			end
			for i = 1, #apiParsed.Classes do
				local classMetadata = apiParsed.Classes[i]
				if not apiMapped.ClassNameFullMembersMap[classMetadata.Name] then
					mapFullMembers(classMetadata)
				end
			end
			
			apiMapped.EnumNameMetadataMap = {}
			for i = 1, #apiParsed.Enums do
				local enumMetadata = apiParsed.Enums[i]
				apiMapped.EnumNameMetadataMap[enumMetadata.Name] = enumMetadata
			end
			
			return apiMapped
		end)
		
		if success then
			cache = errOrReturn
			cacheLoaded = true
			
			cb(true, nil, nil)
		else
			cb(false, errType, errOrReturn)
		end
	end)
end

local function assertFetchedApi()
	if not cacheLoaded then
		error('GetRbxApi.FetchApi must be called with success first!')
	end
end

function GetRbxApi.GetClassMembers(className)
	assertFetchedApi()
	
	return cache.ClassNameFullMembersMap[className]
end

function GetRbxApi.ClearCache()
	cache = {}
	cacheLoaded = false
end

return GetRbxApi]]></ProtectedString>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX9A10E953FA7A4F8CA81012710C3AE8C1">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Maid</string>
						<string name="ScriptGuid">{A783AD89-B343-4F04-AD08-C326E23200A2}</string>
						<ProtectedString name="Source"><![CDATA[local FastSpawn = require(script.Parent.FastSpawn)

local function taskDestructor(task)
	local taskType = typeof(task)
	if taskType == "function" then
		-- Callbacks
		FastSpawn(task)
	elseif taskType == "RBXScriptConnection" then
		-- Connections
		task:Disconnect()
	elseif taskType == "string" then
		-- Render step bindings
		pcall(function()
			game:GetService("RunService"):UnbindFromRenderStep(task)
		end)
	elseif taskType == "Instance" or (taskType == "table" and task.Destroy) then
		-- Instances and custom objects with a :Destroy() method
		task:Destroy()
	else
		warn("Unhandled maid task '" .. tostring(task) .. "' of type '" .. taskType .. "'\n" .. debug.traceback())
	end
end

local Maid = {}
Maid.__index = Maid

function Maid:GiveTask(...)
	local tasksToAdd = { ... }
	for i = 1, #tasksToAdd do
		self.tasks[#self.tasks + 1] = tasksToAdd[i]
	end
	return ... -- Return for the sake of syntactic convenience.
end

function Maid:CombineTasks(...)
	local containedTasks = { ... }
	local collatedTask = function()
		for i = 1, #containedTasks do
			taskDestructor(containedTasks[i])
		end
	end
	self.tasks[#self.tasks + 1] = collatedTask
	
	return collatedTask
end

function Maid:CleanupAllTasks()
	local tasks = self.tasks
	
	-- Disconnect all events first as we know this is safe
	for index, task in pairs(tasks) do
		if typeof(task) == "RBXScriptConnection" then
			tasks[index] = nil
			task:Disconnect()
		end
	end

	-- Clear out tasks table completely, even if clean up tasks add more tasks to the maid
	local index, task = next(tasks)
	while task ~= nil do
		tasks[index] = nil
		taskDestructor(task)
		index, task = next(tasks)
	end
end

-- Removes an individual task from the maid's task queue and destroys it
function Maid:Cleanup(task)
	self:RemoveTask(task)
	taskDestructor(task)
end

-- Removes a task from the maid's task queue without destroying it
function Maid:RemoveTask(task)
	local tasks = self.tasks
	for index, otherTask in pairs(tasks) do
		if otherTask == task then
			tasks[index] = nil
			break
		end
	end
end

-- Maidable maids
function Maid:Destroy()
	self:CleanupAllTasks()
end

function Maid.new()
	local self = setmetatable({}, Maid)
	self.tasks = {}
	
	return self
end

return Maid]]></ProtectedString>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX0057DC8BFA4F4F919FCA39C91F745853">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">FastSpawn</string>
						<string name="ScriptGuid">{A335223E-3CD6-4EA0-8505-8E29D867F954}</string>
						<ProtectedString name="Source"><![CDATA[local FastSpawnerEvent = Instance.new("BindableEvent")
FastSpawnerEvent.Event:Connect(function(callback, argsPointer)
	callback(argsPointer())
end)

local function createPointer(...)
	local args = { ... }
	return function()
		return unpack(args)
	end
end

local function FastSpawn(func, ...)
	assert(type(func) == "function", "Invalid arguments (function expected, got " .. typeof(func) .. ")")
	FastSpawnerEvent:Fire(func, createPointer(...))
end

return FastSpawn]]></ProtectedString>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX85AE3977BC5D4FC1A42C58CAF7F6FDE0">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">RbxXmlSerializer</string>
						<string name="ScriptGuid">{0282DE0E-D4F0-40E9-BC8B-E5C89A94E870}</string>
						<ProtectedString name="Source">local GetRbxApi = require(script.Parent.GetRbxApi)
local SAVE_SERVICE_TYPES = {
&#9;&apos;Workspace&apos;,
&#9;&apos;Lighting&apos;,
&#9;&apos;ReplicatedFirst&apos;,
&#9;&apos;ReplicatedStorage&apos;,
&#9;&apos;ServerScriptService&apos;,
&#9;&apos;ServerStorage&apos;,
&#9;&apos;StarterGui&apos;,
&#9;&apos;StarterPack&apos;,
&#9;&apos;StarterPlayer&apos;,
&#9;&apos;SoundService&apos;,
&#9;&apos;Chat&apos;,
&#9;&apos;LocalizationService&apos;,
&#9;&apos;Teams&apos;,
&#9;&apos;TestService&apos;,
}

local RbxXmlSerializer = {}
RbxXmlSerializer.__index = RbxXmlSerializer

function RbxXmlSerializer:Throttle()
&#9;if tick() - self.throttleBeginTick &gt; self.throttleCooldown then
&#9;&#9;wait()
&#9;&#9;self.throttleBeginTick = tick()
&#9;end
end

do
&#9;local CHAR_REPLACEMENT_MAP = {
&#9;&#9;[string.byte&apos;&lt;&apos;] = &apos;&amp;lt;&apos;,
&#9;&#9;[string.byte&apos;&gt;&apos;] = &apos;&amp;gt;&apos;,
&#9;&#9;[string.byte&apos;\&apos;&apos;] = &apos;&amp;apos;&apos;,
&#9;&#9;[string.byte&apos;&quot;&apos;] = &apos;&amp;quot;&apos;,
&#9;&#9;[string.byte&apos;&amp;&apos;] = &apos;&amp;amp;&apos;,
&#9;}
&#9;for _, range in pairs{
&#9;&#9;{1, 9},
&#9;&#9;{11, 12},
&#9;&#9;{14, 31},
&#9;&#9;{127, 255},
&#9;} do
&#9;&#9;for i = range[1], range[2] do
&#9;&#9;&#9;CHAR_REPLACEMENT_MAP[i] = &apos;&amp;#&apos; .. i .. &apos;;&apos;
&#9;&#9;end
&#9;end
&#9;function RbxXmlSerializer:EscapeString(str)
&#9;&#9;local newStrChars = {}
&#9;&#9;for i = 1, #str do
&#9;&#9;&#9;local byte = str:byte(i)
&#9;&#9;&#9;newStrChars[i] = (CHAR_REPLACEMENT_MAP[byte] or string.char(byte))
&#9;&#9;end
&#9;&#9;
&#9;&#9;return table.concat(newStrChars)
&#9;end
end

do
&#9;local HEX_STR_MAP = { &apos;0&apos;,&apos;1&apos;,&apos;2&apos;,&apos;3&apos;,&apos;4&apos;,&apos;5&apos;,&apos;6&apos;,&apos;7&apos;,&apos;8&apos;,&apos;9&apos;,&apos;A&apos;,&apos;B&apos;,&apos;C&apos;,&apos;D&apos;,&apos;E&apos;,&apos;F&apos;, }
&#9;function RbxXmlSerializer:GetInstanceRef(instance)
&#9;&#9;local existing = self.instanceRefMap[instance]
&#9;&#9;if existing then
&#9;&#9;&#9;return existing
&#9;&#9;end
&#9;&#9;
&#9;&#9;local referentStrs = {&apos;RBX&apos;}
&#9;&#9;for byte = 1, 32 do
&#9;&#9;&#9;referentStrs[#referentStrs + 1] = HEX_STR_MAP[math.random(1, 16)]
&#9;&#9;end
&#9;&#9;
&#9;&#9;local referent = table.concat(referentStrs)
&#9;&#9;self.instanceRefMap[instance] = referent
&#9;&#9;return referent
&#9;end
end

do
&#9;local switchDataType = {
&#9;&#9;[&apos;Vector3&apos;] = function(name, value)
&#9;&#9;&#9;return &apos;&lt;Vector3 name=&quot;&apos; .. name .. &apos;&quot;&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;X&gt;&apos; .. value.X .. &apos;&lt;/X&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;Y&gt;&apos; .. value.Y .. &apos;&lt;/Y&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;Z&gt;&apos; .. value.Z .. &apos;&lt;/Z&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;/Vector3&gt;&apos;
&#9;&#9;end,
&#9;&#9;[&apos;Vector2&apos;] = function(name, value)
&#9;&#9;&#9;return &apos;&lt;Vector2 name=&quot;&apos; .. name .. &apos;&quot;&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;X&gt;&apos; .. value.X .. &apos;&lt;/X&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;Y&gt;&apos; .. value.Y .. &apos;&lt;/Y&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;/Vector2&gt;&apos;
&#9;&#9;end,
&#9;&#9;[&apos;CFrame&apos;] = function(name, value)
&#9;&#9;&#9;local components = { value:components()}
&#9;&#9;&#9;return &apos;&lt;CoordinateFrame name=&quot;&apos; .. name ..&apos;&quot;&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;X&gt;&apos; .. components[1] .. &apos;&lt;/X&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;Y&gt;&apos; .. components[2] .. &apos;&lt;/Y&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;Z&gt;&apos; .. components[3] .. &apos;&lt;/Z&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;R00&gt;&apos; .. components[4] .. &apos;&lt;/R00&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;R01&gt;&apos; .. components[5] .. &apos;&lt;/R01&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;R02&gt;&apos; .. components[6] .. &apos;&lt;/R02&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;R10&gt;&apos; .. components[7] .. &apos;&lt;/R10&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;R11&gt;&apos; .. components[8] .. &apos;&lt;/R11&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;R12&gt;&apos; .. components[9] .. &apos;&lt;/R12&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;R20&gt;&apos; .. components[10] .. &apos;&lt;/R20&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;R21&gt;&apos; .. components[11] .. &apos;&lt;/R21&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;R22&gt;&apos; .. components[12] .. &apos;&lt;/R22&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;/CoordinateFrame&gt;&apos;
&#9;&#9;end,
&#9;&#9;[&apos;Axes&apos;] = function(name, value)
&#9;&#9;&#9;return &apos;&lt;Axes name=&quot;&apos; .. name .. &apos;&quot;&gt;&lt;axes&gt;&apos;
&#9;&#9;&#9;&#9;.. tostring(
&#9;&#9;&#9;&#9;&#9;(value.Z and 4 or 0)
&#9;&#9;&#9;&#9;&#9;+ (value.Y and 2 or 0)
&#9;&#9;&#9;&#9;&#9;+ (value.X and 1 or 0)
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;.. &apos;&lt;/axes&gt;&lt;/Axes&gt;&apos;
&#9;&#9;end,
&#9;&#9;[&apos;Color3&apos;] = function(name, value)
&#9;&#9;&#9;return &apos;&lt;Color3 name=&quot;&apos; .. name .. &apos;&quot;&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;R&gt;&apos; .. value.R .. &apos;&lt;/R&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;G&gt;&apos; .. value.G .. &apos;&lt;/G&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;B&gt;&apos; .. value.B .. &apos;&lt;/B&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;/Color3&gt;&apos;
&#9;&#9;end,
&#9;&#9;[&apos;ColorSequence&apos;] = function(name, value)
&#9;&#9;&#9;local colorSequenceDataStr = &apos;&apos;
&#9;&#9;&#9;for i = 1, #value.Keypoints do
&#9;&#9;&#9;&#9;local keypoint = value.Keypoints[i]
&#9;&#9;&#9;&#9;colorSequenceDataStr = colorSequenceDataStr
&#9;&#9;&#9;&#9;&#9;.. tostring(keypoint.Time) .. &apos; &apos;
&#9;&#9;&#9;&#9;&#9;.. tostring(keypoint.Value.R) .. &apos; &apos;
&#9;&#9;&#9;&#9;&#9;.. tostring(keypoint.Value.G) .. &apos; &apos;
&#9;&#9;&#9;&#9;&#9;.. tostring(keypoint.Value.B) .. &apos; &apos;
&#9;&#9;&#9;&#9;&#9;.. &apos;0 &apos;
&#9;&#9;&#9;end
&#9;&#9;&#9;return &apos;&lt;ColorSequence name=&quot;&apos; .. name .. &apos;&quot;&gt;&apos;
&#9;&#9;&#9;&#9;.. colorSequenceDataStr
&#9;&#9;&#9;&#9;.. &apos;&lt;/ColorSequence&gt;&apos;
&#9;&#9;end,
&#9;&#9;[&apos;Faces&apos;] = function(name, value)
&#9;&#9;&#9;return &apos;&lt;Faces name=&quot;&apos; .. name .. &apos;&quot;&gt;&lt;faces&gt;&apos;
&#9;&#9;&#9;&#9;.. tostring(
&#9;&#9;&#9;&#9;&#9;(value.Front and 32 or 0)
&#9;&#9;&#9;&#9;&#9;+ (value.Bottom and 16 or 0)
&#9;&#9;&#9;&#9;&#9;+ (value.Left and 8 or 0)
&#9;&#9;&#9;&#9;&#9;+ (value.Back and 4 or 0)
&#9;&#9;&#9;&#9;&#9;+ (value.Top and 2 or 0)
&#9;&#9;&#9;&#9;&#9;+ (value.Right and 1 or 0)
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;.. &apos;&lt;/faces&gt;&lt;/Faces&gt;&apos;
&#9;&#9;end,
&#9;&#9;[&apos;NumberRange&apos;] = function(name, value)
&#9;&#9;&#9;return &apos;&lt;NumberRange name=&quot;&apos; .. name .. &apos;&quot;&gt;&apos;
&#9;&#9;&#9;&#9;.. value.Min .. &apos; &apos;
&#9;&#9;&#9;&#9;.. value.Max .. &apos; &apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;/NumberRange&gt;&apos;
&#9;&#9;end,
&#9;&#9;[&apos;NumberSequence&apos;] = function(name, value)
&#9;&#9;&#9;local numberSequenceDataStr = &apos;&apos;
&#9;&#9;&#9;for i = 1, #value.Keypoints do
&#9;&#9;&#9;&#9;local keypoint = value.Keypoints[i]
&#9;&#9;&#9;&#9;numberSequenceDataStr = numberSequenceDataStr
&#9;&#9;&#9;&#9;&#9;.. tostring(keypoint.Time) .. &apos; &apos;
&#9;&#9;&#9;&#9;&#9;.. tostring(keypoint.Value) .. &apos; &apos;
&#9;&#9;&#9;&#9;&#9;.. tostring(keypoint.Envelope) .. &apos; &apos;
&#9;&#9;&#9;end
&#9;&#9;&#9;return &apos;&lt;NumberSequence name=&quot;&apos; .. name .. &apos;&quot;&gt;&apos;
&#9;&#9;&#9;&#9;.. numberSequenceDataStr
&#9;&#9;&#9;&#9;.. &apos;&lt;/NumberSequence&gt;&apos;
&#9;&#9;end,
&#9;&#9;[&apos;PhysicalProperties&apos;] = function(name, value)
&#9;&#9;&#9;local physicalPropertiesStr = &apos;&apos;
&#9;&#9;&#9;if value == nil then
&#9;&#9;&#9;&#9;physicalPropertiesStr = &apos;&lt;CustomPhysics&gt;false&lt;/CustomPhysics&gt;&apos;
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;physicalPropertiesStr = &apos;&lt;CustomPhysics&gt;true&lt;/CustomPhysics&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;Density&gt;&apos; .. value.Density .. &apos;&lt;/Density&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;Friction&gt;&apos; .. value.Friction .. &apos;&lt;/Friction&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;Elasticity&gt;&apos; .. value.Elasticity .. &apos;&lt;/Elasticity&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;FrictionWeight&gt;&apos; .. value.FrictionWeight .. &apos;&lt;/FrictionWeight&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;ElasticityWeight&gt;&apos; .. value.ElasticityWeight .. &apos;&lt;/ElasticityWeight&gt;&apos;
&#9;&#9;&#9;end
&#9;&#9;&#9;return &apos;&lt;PhysicalProperties name=&quot;&apos; .. name .. &apos;&quot;&gt;&apos;
&#9;&#9;&#9;&#9;.. physicalPropertiesStr
&#9;&#9;&#9;&#9;.. &apos;&lt;/PhysicalProperties&gt;&apos;
&#9;&#9;end,
&#9;&#9;[&apos;BrickColor&apos;] = function(name, value)
&#9;&#9;&#9;return &apos;&lt;int name=&quot;&apos; .. name .. &apos;&quot;&gt;&apos; .. value.Number .. &apos;&lt;/int&gt;&apos;
&#9;&#9;end,
&#9;&#9;[&apos;Ray&apos;] = function(name, value)
&#9;&#9;&#9;return &apos;&lt;Ray name=&quot;&apos; .. name .. &apos;&quot;&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;origin&gt;&apos;
&#9;&#9;&#9;&#9;&#9; .. &apos;&lt;X&gt;&apos; .. value.Origin.X .. &apos;&lt;/X&gt;&apos;
&#9;&#9;&#9;&#9;&#9; .. &apos;&lt;Y&gt;&apos; .. value.Origin.Y .. &apos;&lt;/Y&gt;&apos;
&#9;&#9;&#9;&#9;&#9; .. &apos;&lt;Z&gt;&apos; .. value.Origin.Z .. &apos;&lt;/Z&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;/origin&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;direction&gt;&apos;
&#9;&#9;&#9;&#9;&#9; .. &apos;&lt;X&gt;&apos; .. value.Direction.X .. &apos;&lt;/X&gt;&apos;
&#9;&#9;&#9;&#9;&#9; .. &apos;&lt;Y&gt;&apos; .. value.Direction.Y .. &apos;&lt;/Y&gt;&apos;
&#9;&#9;&#9;&#9;&#9; .. &apos;&lt;Z&gt;&apos; .. value.Direction.Z .. &apos;&lt;/Z&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;/direction&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;/Ray&gt;&apos;
&#9;&#9;end,
&#9;&#9;[&apos;Rect&apos;] = function(name, value)
&#9;&#9;&#9;return &apos;&lt;Rect2D name=&quot;&apos; .. name .. &apos;&quot;&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;min&gt;&apos;
&#9;&#9;&#9;&#9;&#9; .. &apos;&lt;X&gt;&apos; .. value.Min.X .. &apos;&lt;/X&gt;&apos;
&#9;&#9;&#9;&#9;&#9; .. &apos;&lt;Y&gt;&apos; .. value.Min.Y .. &apos;&lt;/Y&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;/min&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;max&gt;&apos;
&#9;&#9;&#9;&#9;&#9; .. &apos;&lt;X&gt;&apos; .. value.Max.X .. &apos;&lt;/X&gt;&apos;
&#9;&#9;&#9;&#9;&#9; .. &apos;&lt;Y&gt;&apos; .. value.Max.Y .. &apos;&lt;/Y&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;/max&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;/Rect2D&gt;&apos;
&#9;&#9;end,
&#9;&#9;[&apos;UDim2&apos;] = function(name, value)
&#9;&#9;&#9;return &apos;&lt;UDim2 name=&quot;&apos; .. name .. &apos;&quot;&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;XS&gt;&apos; .. value.X.Scale .. &apos;&lt;/XS&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;XO&gt;&apos; .. value.X.Offset .. &apos;&lt;/XO&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;YS&gt;&apos; .. value.Y.Scale .. &apos;&lt;/YS&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;YO&gt;&apos; .. value.Y.Offset .. &apos;&lt;/YO&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;/UDim2&gt;&apos;
&#9;&#9;end,
&#9;&#9;[&apos;UDim&apos;] = function(name, value)
&#9;&#9;&#9;return &apos;&lt;UDim name=&quot;&apos; .. name .. &apos;&quot;&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;XS&gt;&apos; .. value.Scale .. &apos;&lt;/XS&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;XO&gt;&apos; .. value.Offset .. &apos;&lt;/XO&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;/UDim&gt;&apos;
&#9;&#9;end,
&#9;&#9;[&apos;ProtectedString&apos;] = function(name, value, self)
&#9;&#9;&#9;local serializedStr
&#9;&#9;&#9;if value:find(&apos;]]&gt;&apos;, nil, true) then
&#9;&#9;&#9;&#9;serializedStr = self:EscapeString(value)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;serializedStr = &apos;&lt;![CDATA[&apos; .. value .. &apos;]]&gt;&apos;
&#9;&#9;&#9;end
&#9;&#9;&#9;return table.concat {&apos;&lt;ProtectedString name=&quot;&apos;, name, &apos;&quot;&gt;&apos;,
&#9;&#9;&#9;&#9;serializedStr,
&#9;&#9;&#9;&#9;&apos;&lt;/ProtectedString&gt;&apos;
&#9;&#9;&#9;}
&#9;&#9;end,
&#9;&#9;[&apos;Content&apos;] = function(name, value)
&#9;&#9;&#9;if not value or value == &apos;&apos; then
&#9;&#9;&#9;&#9;return &apos;&lt;Content name=&quot;&apos; .. name .. &apos;&quot;&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;null&gt;&lt;/null&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;/Content&gt;&apos;
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;return &apos;&lt;Content name=&quot;&apos; .. name .. &apos;&quot;&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;url&gt;&apos; .. value .. &apos;&lt;/url&gt;&apos;
&#9;&#9;&#9;&#9;.. &apos;&lt;/Content&gt;&apos;
&#9;&#9;&#9;end
&#9;&#9;end,
&#9;&#9;default = function(name, value)
&#9;&#9;&#9;return &apos;&apos;
&#9;&#9;end,
&#9;}
&#9;setmetatable(switchDataType, {__index = function(k) return switchDataType.default end})
&#9;function RbxXmlSerializer:SerializeDataTypeProperty(name, value, dataTypeName)
&#9;&#9;return switchDataType[dataTypeName](name, value, self)
&#9;end
end

do
--&#9;local switchPrimitiveType = {
--&#9;&#9;[&apos;string&apos;] = function(name, value)
--&#9;&#9;&#9;return &apos;&lt;string name=&quot;&apos; .. name .. &apos;&quot;&gt;&apos; .. value .. &quot;&lt;/string&gt;&quot;
--&#9;&#9;end,
--&#9;&#9;[&apos;bool&apos;] = function(name, value)
--&#9;&#9;&#9;return &apos;&lt;bool name=&quot;&apos; .. name .. &apos;&quot;&gt;&apos; .. value .. &quot;&lt;/bool&gt;&quot;
--&#9;&#9;end
--&#9;}
&#9;function RbxXmlSerializer:SerializePrimitiveProperty(name, value, primitiveType)
&#9;&#9;return &apos;&lt;&apos; .. primitiveType .. &apos; name=&quot;&apos; .. name .. &apos;&quot;&gt;&apos; .. tostring(value) .. &quot;&lt;/&quot; .. primitiveType .. &quot;&gt;&quot;
--&#9;&#9;return switchPrimitiveType[primitiveType](name, value)
&#9;end
end

function RbxXmlSerializer:SerializeProperty(name, value, valueType)
&#9;self:Throttle()
&#9;if valueType.Category == &apos;Primitive&apos; then
&#9;&#9;return self:SerializePrimitiveProperty(name, value, valueType.Name)
&#9;elseif valueType.Category == &quot;Enum&quot; then
&#9;&#9;return &apos;&lt;token name=&quot;&apos; .. name .. &apos;&quot;&gt;&apos;
&#9;&#9;&#9;.. value.Value
&#9;&#9;&#9;.. &quot;&lt;/token&gt;&quot;
&#9;elseif valueType.Category == &quot;Class&quot; then
&#9;&#9;return &apos;&lt;Ref name=&quot;&apos; .. name .. &apos;&quot;&gt;&apos;
&#9;&#9;&#9;.. (value and self:GetInstanceRef(value) or &apos;null&apos;)
&#9;&#9;.. &quot;&lt;/Ref&gt;&quot;
&#9;elseif valueType.Category == &quot;DataType&quot; then
&#9;&#9;return self:SerializeDataTypeProperty(name, value, valueType.Name)
&#9;end
end

function RbxXmlSerializer:SerializeInstanceProperties(instance)
&#9;self.resultStrs[#self.resultStrs + 1] = &apos;&lt;Properties&gt;&apos;
&#9;
&#9;local members = GetRbxApi.GetClassMembers(instance.ClassName)
&#9;for i = 1, #members do
&#9;&#9;local member = members[i]
&#9;&#9;if member.MemberType == &apos;Property&apos; and member.Serialization.CanLoad and member.Serialization.CanSave then
&#9;&#9;&#9;local canRead = true; do
&#9;&#9;&#9;&#9;if member.Tags then
&#9;&#9;&#9;&#9;&#9;for i = 1, #member.Tags do
&#9;&#9;&#9;&#9;&#9;&#9;local tag = member.Tags[i]
&#9;&#9;&#9;&#9;&#9;&#9;if tag == &apos;NotScriptable&apos; or tag == &apos;Hidden&apos; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;canRead = false
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;if member.Security.Read ~= &apos;None&apos;
&#9;&#9;&#9;&#9;and member.Security.Read ~= &apos;PluginSecurity&apos;
&#9;&#9;&#9;&#9;and member.Security.Read ~= &apos;RobloxScriptSecurity&apos; then
&#9;&#9;&#9;&#9;&#9;canRead = false
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end 
&#9;&#9;&#9;if canRead then
&#9;&#9;&#9;&#9;local success, err = pcall(function()
&#9;&#9;&#9;&#9;&#9;self.resultStrs[#self.resultStrs + 1] = self:SerializeProperty(member.Name, instance[member.Name], member.ValueType)
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;if err then
&#9;&#9;&#9;&#9;&#9;if not err:find(&apos;The current identity&apos;) then
&#9;&#9;&#9;&#9;&#9;&#9;error(err)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;
&#9;-- Extra stipulations based on roblox xml serialization format
&#9;do
&#9;&#9;if instance:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;self.resultStrs[#self.resultStrs + 1] = self:SerializeProperty(
&#9;&#9;&#9;&#9;&apos;size&apos;,
&#9;&#9;&#9;&#9;instance.Size,
&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;Category = &apos;DataType&apos;,
&#9;&#9;&#9;&#9;&#9;Name = &apos;Vector3&apos;,
&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;)
&#9;&#9;&#9;
&#9;&#9;&#9;if instance:IsA(&quot;Part&quot;) then
&#9;&#9;&#9;&#9;self.resultStrs[#self.resultStrs + 1] = self:SerializeProperty(
&#9;&#9;&#9;&#9;&#9;&apos;formFactorRaw&apos;,
&#9;&#9;&#9;&#9;&#9;instance.FormFactor,
&#9;&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;&#9;Category = &apos;Enum&apos;,
&#9;&#9;&#9;&#9;&#9;&#9;Name = &apos;FormFactor&apos;,
&#9;&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;self.resultStrs[#self.resultStrs + 1] = self:SerializeProperty(
&#9;&#9;&#9;&#9;&#9;&apos;shape&apos;,
&#9;&#9;&#9;&#9;&#9;instance.Shape,
&#9;&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;&#9;Category = &apos;Enum&apos;,
&#9;&#9;&#9;&#9;&#9;&#9;Name = &apos;PartType&apos;,
&#9;&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;&#9;self.resultStrs[#self.resultStrs + 1] = &apos;&lt;Color3uint8 name=&quot;Color3uint8&quot;&gt;&apos;
&#9;&#9;&#9;&#9;.. (
&#9;&#9;&#9;&#9;&#9;16 ^ 6 * 255
&#9;&#9;&#9;&#9;&#9;+ 16 ^ 4 * math.floor(instance.Color.R * 255)
&#9;&#9;&#9;&#9;&#9;+ 16 ^ 2 * math.floor(instance.Color.G * 255)
&#9;&#9;&#9;&#9;&#9;+ math.floor(instance.Color.B * 255))
&#9;&#9;&#9;&#9;.. &apos;&lt;/Color3uint8&gt;&apos;
&#9;&#9;end
&#9;end
&#9;
&#9;self.resultStrs[#self.resultStrs + 1] = &apos;&lt;/Properties&gt;&apos;
end

function RbxXmlSerializer:SerializeInstance(instance)
&#9;self:Throttle()
&#9;self.resultStrs[#self.resultStrs + 1] = &apos;&lt;Item class=&quot;&apos; .. instance.ClassName .. &apos;&quot; referent=&quot;&apos; .. self:GetInstanceRef(instance) .. &apos;&quot;&gt;&apos;
&#9;
&#9;self:SerializeInstanceProperties(instance)
&#9;
&#9;local children = instance:GetChildren()
&#9;for i = 1, #children do
&#9;&#9;self:SerializeInstance(children[i])
&#9;end
&#9;
&#9;self.resultStrs[#self.resultStrs + 1] = &apos;&lt;/Item&gt;&apos;
end

function RbxXmlSerializer.new(throttleToMinFramerate)
&#9;local self = {
&#9;&#9;instanceRefMap = {},
&#9;&#9;throttleCooldown = throttleToMinFramerate and (1 / throttleToMinFramerate) or math.huge,
&#9;&#9;throttleBeginTick = 0,
&#9;&#9;serializationBeginTick = 0,
&#9;&#9;resultStrs = {},
&#9;&#9;completionTime = 0,
&#9;&#9;completed = false,
&#9;}
&#9;setmetatable(self, RbxXmlSerializer)
&#9;return self
end

function RbxXmlSerializer:SerializeGameSync()
&#9;self.throttleBeginTick = tick()
&#9;self.serializationBeginTick = tick()
&#9;self.resultStrs = {}
&#9;self.resultStrs[#self.resultStrs + 1] = &apos;&lt;roblox&apos;
&#9;&#9;.. &apos; xmlns:xmime=&quot;http://www.w3.org/2005/05/xmlmime&quot;&apos;
&#9;&#9;.. &apos; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&apos;
&#9;&#9;.. &apos; xsi:noNamespaceSchemaLocation=&quot;http://www.roblox.com/roblox.xsd&quot;&apos;
&#9;&#9;.. &apos; version=&quot;4&quot;&gt;&apos;
&#9;
&#9;for i = 1, #SAVE_SERVICE_TYPES do
&#9;&#9;local service = game:GetService(SAVE_SERVICE_TYPES[i])
&#9;&#9;self:SerializeInstance(service)
&#9;end
&#9;
&#9;self.resultStrs[#self.resultStrs + 1] = &apos;&lt;/roblox&gt;&apos;
&#9;self.completionTime = tick() - self.serializationBeginTick
&#9;self.completed = true
end

function RbxXmlSerializer:GetCompletionTime()
&#9;return self.completionTime
end

function RbxXmlSerializer:ConcatenateResults()
&#9;return table.concat(self.resultStrs)
end

return RbxXmlSerializer</ProtectedString>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
		</Item>
	</Item>
	<Item class="LuaWebService" referent="RBXCC1F9799FC4049CD81069DA72A43E601">
		<Properties>
			<string name="Name">Instance</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="Lighting" referent="RBX59EAE7D79D4D45BC852F389A7445963A">
		<Properties>
			<Color3 name="Ambient">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<float name="Brightness">2</float>
			<Color3 name="ColorShift_Bottom">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<Color3 name="ColorShift_Top">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<float name="ExposureCompensation">0</float>
			<Color3 name="FogColor">
				<R>0.752941251</R>
				<G>0.752941251</G>
				<B>0.752941251</B>
			</Color3>
			<float name="FogEnd">100000</float>
			<float name="FogStart">0</float>
			<float name="GeographicLatitude">41.7332993</float>
			<bool name="GlobalShadows">true</bool>
			<bool name="LegacyOutlines">false</bool>
			<string name="Name">Lighting</string>
			<Color3 name="OutdoorAmbient">
				<R>0.501960814</R>
				<G>0.501960814</G>
				<B>0.501960814</B>
			</Color3>
			<bool name="Outlines">false</bool>
			<float name="ShadowSoftness">0.5</float>
			<BinaryString name="Tags"></BinaryString>
			<token name="Technology">1</token>
			<string name="TimeOfDay">14:00:00</string>
		</Properties>
	</Item>
	<Item class="HttpService" referent="RBX3DEB80029FCF4BD8B2BA7464680D5B50">
		<Properties>
			<bool name="HttpEnabled">true</bool>
			<string name="Name">HttpService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="VirtualInputManager" referent="RBX729B14D5602B404F868034A3950269D2">
		<Properties>
			<string name="Name">VirtualInputManager</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<Item class="TestService" referent="RBX048A95EF0DB5497AAFF23C4E4E81CFBC">
		<Properties>
			<bool name="AutoRuns">true</bool>
			<string name="Description"></string>
			<bool name="ExecuteWithStudioRun">false</bool>
			<bool name="Is30FpsThrottleEnabled">true</bool>
			<bool name="IsPhysicsEnvironmentalThrottled">true</bool>
			<bool name="IsSleepAllowed">true</bool>
			<string name="Name">TestService</string>
			<int name="NumberOfPlayers">0</int>
			<double name="SimulateSecondsLag">0</double>
			<BinaryString name="Tags"></BinaryString>
			<double name="Timeout">10</double>
		</Properties>
	</Item>
	<Item class="DataStoreService" referent="RBX32BC57416AC84550A11A8AB2217F50D9">
		<Properties>
			<bool name="AutomaticRetry">true</bool>
			<bool name="LegacyNamingScheme">false</bool>
			<string name="Name">DataStoreService</string>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
	</Item>
	<SharedStrings>
		<SharedString md5="c3gK/I1fs0aWnxIersNQuw==">Q1NHUEhTBgAAAEbdt0C4fj69nVCVvFtZFz2MnNRA3jsJPgjykj4Q/9pAMsK8vl/9wEAQAAAA
AAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/DAAAAAQAAAAAAAAAD/7LPwAA
4DQP/ku/L3CPPwDAorgAAAAAL3CPPwz+S78P/ku/L3CPP+/4S78MAAAAAAAAAAEAAAACAAAA
AAAAAAIAAAADAAAAAAAAAAMAAAABAAAAAQAAAAMAAAACAAAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAQAAAAAAAAAAAAAAAAAAAAAACAPw8AAAAEAAAADP5LPy9wjz8A4KK4AJCjOA/+yz8AAMA0
AJCjOC9wjz8N/ku/+YkiPy9wjz8N/ku/DP5LP7Nxjz/w+Eu/EgAAAAAAAAABAAAAAgAAAAAA
AAACAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAAAQAAAAEAAAAEAAAAAwAAAAEAAAADAAAA
AgAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8PAAAABAAAAACw
ozgO/su/AAAAtAAAgDPuVY+/Df5LP9jzSz9KcY+/AAAAtBH+Sz9KcY+/Df5LP/2JIj+7bI+/
Df5LPxIAAAAAAAAAAQAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAEA
AAABAAAABAAAAAMAAAABAAAAAwAAAAIAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAA
AAAAAAAAAAAAAIA/KgAAAAQAAAD5iSI/EP5LPyZxjz8M/ks/gvtLPyZxjz/5iSI/EP5LP335
fz8AAAAAEP5LPyZxjz8M/ss+LAPMPh63rT8M/ks/gvtLP335fz8M/ks/LAPMPiZxjz9rnqI+
LAPMPiTnfz8AAAAAEP5LP335fz8AAAAALAPMPh63rT8M/ks/LAPMPn35fz/6+DI/LAPMPuf0
fz8M/ss+LAPMPm/pfz8AAAAALAPMPiTnfz9IAAAAAAAAAAEAAAAFAAAAAAAAAAUAAAACAAAA
AAAAAAIAAAAIAAAAAAAAAAgAAAADAAAAAAAAAAMAAAAJAAAAAAAAAAkAAAAEAAAAAAAAAAQA
AAABAAAAAQAAAAQAAAAGAAAAAQAAAAYAAAAKAAAAAQAAAAoAAAAFAAAAAgAAAAcAAAANAAAA
AgAAAA0AAAAIAAAAAgAAAAUAAAAHAAAAAwAAAAgAAAANAAAAAwAAAA0AAAAJAAAABAAAAAkA
AAANAAAABAAAAA0AAAAHAAAABAAAAAcAAAAMAAAABAAAAAwAAAALAAAABAAAAAsAAAAKAAAA
BAAAAAoAAAAGAAAABQAAAAoAAAALAAAABQAAAAsAAAAMAAAABQAAAAwAAAAHAAAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPyQAAAAEAAAAD/5LPzBwD7+Lbo8/
D/5LP1gCTL+Lbo8/D/5LPzBwD7+x+38//20PPzBwD79ZaKE/D/5LP431f7+x+38/D/5LPzBw
j78EAUw/BrNHPzBwD7+2+H8/AAAAADBwD7/+VKE/AAAAAJvRf7/w2n8/AJCjODtVj7//A0w/
GI8iP8xqj7//A0w/AAAAADBwD7/w2n8/PAAAAAAAAAABAAAABAAAAAAAAAAEAAAABQAAAAAA
AAAFAAAAAgAAAAAAAAACAAAABgAAAAAAAAAGAAAACwAAAAAAAAALAAAABwAAAAAAAAAHAAAA
AwAAAAAAAAADAAAAAQAAAAEAAAADAAAABAAAAAIAAAAFAAAABgAAAAMAAAAHAAAACAAAAAMA
AAAIAAAABAAAAAQAAAAIAAAACQAAAAQAAAAJAAAACgAAAAQAAAAKAAAABQAAAAUAAAAKAAAA
CQAAAAUAAAAJAAAACwAAAAUAAAALAAAABgAAAAcAAAALAAAACAAAAAgAAAALAAAACQAAABAA
AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8hAAAABAAAAA3+Sz8vcI8/
CAFMvw3+Sz/p+X8/UgKAvwBYIzkvcI8/CAFMv2RqDz9edw8/y+9/vw3+Sz9edw8/tPt/vw3+
Sz/RAEw/jW6Pv2RqDz9edw8/3mahvwBYIzledw8/W2ihvwBYIznp+X8/UgKAvwBYIzledw8/
y+9/vw3+Sz9edw8/jW6PvzYAAAAAAAAAAQAAAAgAAAAAAAAACAAAAAIAAAAAAAAAAgAAAAkA
AAAAAAAACQAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAoAAAAAAAAACgAAAAUAAAAAAAAA
BQAAAAEAAAABAAAABQAAAAYAAAABAAAABgAAAAcAAAABAAAABwAAAAgAAAACAAAACAAAAAcA
AAACAAAABwAAAAkAAAADAAAACQAAAAcAAAADAAAABwAAAAYAAAADAAAABgAAAAoAAAADAAAA
CgAAAAQAAAAFAAAACgAAAAYAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAA
AAAAAIA/IQAAAAQAAAAAIKO4L3CPPwz+S78AAIA0XncPPx3uf78AIKO46fl/P/gCgL/y+Eu/
L3CPPwz+S78AIKO4XncPP9hpob8P/ku/XncPPx3uf78P/ku/6fl/P/gCgL/Gl+S+XncPP9hp
ob8P/ku/XncPPyVoj7/+bQ+/XncPP1toob8P/ku/0QBMPxluj782AAAAAAAAAAEAAAACAAAA
AAAAAAIAAAAGAAAAAAAAAAYAAAADAAAAAAAAAAMAAAAFAAAAAAAAAAUAAAABAAAAAQAAAAQA
AAACAAAAAQAAAAUAAAAIAAAAAQAAAAgAAAAJAAAAAQAAAAkAAAAHAAAAAQAAAAcAAAAEAAAA
AgAAAAQAAAAHAAAAAgAAAAcAAAAGAAAAAwAAAAYAAAAFAAAABQAAAAYAAAAKAAAABQAAAAoA
AAAIAAAABgAAAAcAAAAJAAAABgAAAAkAAAAKAAAACAAAAAoAAAAJAAAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPyQAAAAEAAAAAAAAAAAAAACs1n8/AAAAABH+
yz686X8/a56iPhH+yz686X8/DP7LPtjzyz686X8/DP5LPwAAAADM/H8/AAAAAAAAAAAO/ss/
AAAAABH+yz4mta0/DP5LPxH+yz7M/H8/DP5LPwAAAADec48/DP5LP9jzyz7ec48/DP7LPtjz
yz4mta0/a56iPhH+yz4mta0/PAAAAAAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAA
BwAAAAAAAAAHAAAABAAAAAAAAAAEAAAACAAAAAAAAAAIAAAABQAAAAAAAAAFAAAABgAAAAAA
AAAGAAAAAQAAAAEAAAAGAAAACwAAAAEAAAALAAAABwAAAAEAAAAHAAAAAgAAAAIAAAAHAAAA
AwAAAAQAAAAHAAAACQAAAAQAAAAJAAAACAAAAAUAAAAIAAAACQAAAAUAAAAJAAAACgAAAAUA
AAAKAAAACwAAAAUAAAALAAAABgAAAAcAAAALAAAACQAAAAkAAAALAAAACgAAABAAAAAAAAAA
AAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8hAAAABAAAAPBVj78AAAAABQFMPwA7
j780/Eu/BQFMP3zRf78AAAAAktp/P/BVD78AAAAAktp/P/BVD798Q4+/BQFMP2Kmf7/2rH+/
BQFMP2Kmf7/2rH+/6bB/P/BVD78AAAAAsl2hP/BVD7+qSg+/2EuhP/BVD79Su3+/xMJ/P+0A
TL+3OI+/BQFMPzYAAAAAAAAAAQAAAAIAAAAAAAAAAgAAAAcAAAAAAAAABwAAAAMAAAAAAAAA
AwAAAAQAAAAAAAAABAAAAAoAAAAAAAAACgAAAAUAAAAAAAAABQAAAAEAAAABAAAABQAAAAYA
AAABAAAABgAAAAIAAAACAAAABgAAAAgAAAACAAAACAAAAAcAAAADAAAABwAAAAgAAAADAAAA
CAAAAAkAAAADAAAACQAAAAQAAAAEAAAACQAAAAYAAAAEAAAABgAAAAoAAAAFAAAACgAAAAYA
AAAGAAAACQAAAAgAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/
GwAAAAQAAAAAoKK4AAAAAED6y7/gaA+/L3APP+5qob8AoKK4L3APP+5qob8AAAA1AAAAALDW
f78Q/ku/AAAAAM1Yj78Q/ku/L3APP/Vpj78AoKK4L3APP1/xf78Q/ku/AAAAALDWf78Q/ku/
L3APP1/xf78qAAAAAAAAAAEAAAACAAAAAAAAAAIAAAADAAAAAAAAAAMAAAAHAAAAAAAAAAcA
AAAEAAAAAAAAAAQAAAAFAAAAAAAAAAUAAAABAAAAAQAAAAUAAAAIAAAAAQAAAAgAAAAGAAAA
AQAAAAYAAAACAAAAAgAAAAYAAAADAAAAAwAAAAYAAAAIAAAAAwAAAAgAAAAHAAAABAAAAAcA
AAAIAAAABAAAAAgAAAAFAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAA
AACAPx4AAAAEAAAAAOCiOAAAAABA+su/AADAtAAAAACw1n+/AOCiOC9wDz/uaqG//G0PPy9w
Dz/uaqG/Df5LPy9wDz99c4+/Df5LPwAAAAB9c4+/AOCiOC9wDz9f8X+/Df5LPwAAAADP/H+/
/G0PPy9wDz9f8X+/Df5LPy9wDz/P/H+/MAAAAAAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAAA
AAADAAAABAAAAAAAAAAEAAAABQAAAAAAAAAFAAAABwAAAAAAAAAHAAAAAQAAAAEAAAAGAAAA
AgAAAAEAAAAHAAAACAAAAAEAAAAIAAAABgAAAAIAAAAGAAAACAAAAAIAAAAIAAAACQAAAAIA
AAAJAAAABAAAAAIAAAAEAAAAAwAAAAQAAAAJAAAABwAAAAQAAAAHAAAABQAAAAcAAAAJAAAA
CAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8eAAAABAAAAAAA
AAAwcA+/rNZ/PwAAAAAAAAAAfNp/P37e/z4AAAAAjO1/Pw/+Sz8AAAAA/Ph/Pw/+Sz8wcA+/
/Ph/PwAAAAAwcA+/m1qhPwAAAAAAAAAADv7LPw/+Sz8AAAAA9nGPPw/+Sz8wcA+/9nGPP/9t
Dz8wcA+/w2uhPzAAAAAAAAAAAQAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAAQAAAAAAAAA
BAAAAAgAAAAAAAAACAAAAAkAAAAAAAAACQAAAAUAAAAAAAAABQAAAAYAAAAAAAAABgAAAAEA
AAABAAAABgAAAAcAAAABAAAABwAAAAMAAAABAAAAAwAAAAIAAAADAAAABwAAAAgAAAADAAAA
CAAAAAQAAAAFAAAACQAAAAYAAAAGAAAACQAAAAcAAAAHAAAACQAAAAgAAAAQAAAAAAAAAAAA
AAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/IQAAAAQAAACEvn+/DP5Lv4arf78O/ku/
0/NLv4arf7/0Po+/DP5LvwDwZbn0Po+/DP5Lv7T2S78v3X+/AJCjuG/Pf78O/ku/3rIiv8w8
j78O/ku/0/NLv541j78O/ku/3rIiv7Syf7/x+Mu/AJCjuADwZbkO/ku/AAAAAG/Pf78O/ku/
AAAAAFhSj782AAAAAAAAAAEAAAACAAAAAAAAAAIAAAADAAAAAAAAAAMAAAAEAAAAAAAAAAQA
AAAFAAAAAAAAAAUAAAAGAAAAAAAAAAYAAAABAAAAAQAAAAYAAAAFAAAAAQAAAAUAAAAKAAAA
AQAAAAoAAAAJAAAAAQAAAAkAAAAHAAAAAQAAAAcAAAACAAAAAgAAAAgAAAADAAAAAgAAAAcA
AAAJAAAAAgAAAAkAAAAIAAAAAwAAAAgAAAAEAAAABAAAAAoAAAAFAAAABAAAAAgAAAAKAAAA
CAAAAAkAAAAKAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPxsA
AAAEAAAADP5LPxL+Sz8ucI8/AJCiOBL+Sz8ucI8/DP5LPxL+Sz+J9X8/DP5LPwwDgD+5/H8/
AJCiOAwDgD+5/H8/AAAAtYP7yz8AAAC0AJCiOBL+Sz+J9X8/DP5LPxRyjz8AAAC0DP5LPxRy
jz8k+0s/KgAAAAAAAAABAAAABgAAAAAAAAAGAAAAAgAAAAAAAAACAAAABwAAAAAAAAAHAAAA
CAAAAAAAAAAIAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAAAQAAAAEAAAAEAAAABQAAAAEA
AAAFAAAABgAAAAIAAAAGAAAABwAAAAMAAAAIAAAABQAAAAMAAAAFAAAABAAAAAUAAAAHAAAA
BgAAAAUAAAAIAAAABwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAA
gD8eAAAABAAAAAz+S7/v+Eu/Uj6Pvwz+S7/v+Eu/ZL1/vwz+S7/csiK/DESPvwCQo7gAwKK4
Dv7LvwAAAAAM/ku/CFmPvwAAAAAM/ku/6tt/vwz+S7/csiK/ZL1/vwz+S78AwKK4CFmPvwAA
AAAAAOA06tt/vwz+S78AwKK46tt/vzAAAAAAAAAAAQAAAAYAAAAAAAAABgAAAAkAAAAAAAAA
CQAAAAcAAAAAAAAABwAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAUA
AAAAAAAABQAAAAEAAAABAAAABQAAAAgAAAABAAAACAAAAAYAAAACAAAABwAAAAMAAAADAAAA
BwAAAAgAAAADAAAACAAAAAQAAAAEAAAACAAAAAUAAAAGAAAACAAAAAkAAAAHAAAACQAAAAgA
AAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/GwAAAAQAAAAA4GW4
AADmuID7yz/wVQ+/AADmuHNdoT/wVQ+/7lUPvwFJoT/wVQ+/4Ll/v6DDfz8AAAAAbM9/vy7d
fz8AAAAAAADmuC7dfz/wVQ+/AADmuC7dfz/wVQ+/yjyPvwz+Sz8AAAAAVlKPvwz+Sz8qAAAA
AAAAAAEAAAACAAAAAAAAAAIAAAADAAAAAAAAAAMAAAAEAAAAAAAAAAQAAAAFAAAAAAAAAAUA
AAAGAAAAAAAAAAYAAAABAAAAAQAAAAYAAAAHAAAAAQAAAAcAAAADAAAAAQAAAAMAAAACAAAA
AwAAAAcAAAAIAAAAAwAAAAgAAAAEAAAABAAAAAgAAAAFAAAABQAAAAgAAAAHAAAABQAAAAcA
AAAGAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPx4AAAAEAAAA
AADluBD+y78AAAC0GjiPvwz+S78AAAC0xad/v5e1f78AAAC0xad/v5e1f7/2qX+/AADluHze
f78Q1X+/AADluAz+S78Q1X+/GjiPvwz+S7+8+Uu/8q5/vwz+S78lsX+/PPVLvwz+S78yOY+/
AADluAz+S7/uVY+/MAAAAAAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAABAAAAAAA
AAAEAAAACQAAAAAAAAAJAAAABQAAAAAAAAAFAAAAAQAAAAEAAAAFAAAACQAAAAEAAAAJAAAA
CAAAAAEAAAAIAAAABwAAAAEAAAAHAAAABgAAAAEAAAAGAAAAAwAAAAEAAAADAAAAAgAAAAMA
AAAGAAAABwAAAAMAAAAHAAAACAAAAAMAAAAIAAAACQAAAAMAAAAJAAAABAAAABAAAAAAAAAA
AAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8eAAAABAAAAEcITL8AYGU5bFOPvzLd
f78AYGU5ltF/v0cITL8H9ks/LXCPv0cITL8AYGU5ltF/vwsDgL9Q9n8/uPx/vxP+y78AYGU5
AADmuEcITL9Q9n8/uPx/v0cITL8vcI8/AAAAAAsDgL9Q9n8/AADmuEcITL8vcI8/I/tLvzAA
AAAAAAAAAQAAAAIAAAAAAAAAAgAAAAYAAAAAAAAABgAAAAkAAAAAAAAACQAAAAcAAAAAAAAA
BwAAAAMAAAAAAAAAAwAAAAUAAAAAAAAABQAAAAEAAAABAAAABAAAAAIAAAABAAAABQAAAAQA
AAACAAAABAAAAAYAAAADAAAABwAAAAUAAAAEAAAABQAAAAgAAAAEAAAACAAAAAcAAAAEAAAA
BwAAAAkAAAAEAAAACQAAAAYAAAAFAAAABwAAAAgAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAA
AAAAAAAAAAAAAAAAAAAAAIA/HgAAAAQAAABHCEw/AAAAAC5wjz8KA4A/AAAAALn8fz9HCEw/
AAAAAIn1fz9HCEw/KPtLv5Zsjz8KA4A/vfx/v7n8fz8P/ss/AADmuAAAALRHCEw/mGyPvwAA
ALRHCEw/jfV/v4n1fz9HCEw/MHCPvyT7Sz8KA4A/vfx/vwAAALQwAAAAAAAAAAEAAAACAAAA
AAAAAAIAAAAGAAAAAAAAAAYAAAAIAAAAAAAAAAgAAAAHAAAAAAAAAAcAAAADAAAAAAAAAAMA
AAAEAAAAAAAAAAQAAAABAAAAAQAAAAUAAAACAAAAAQAAAAQAAAAFAAAAAgAAAAUAAAAGAAAA
AwAAAAcAAAAEAAAABAAAAAcAAAAIAAAABAAAAAgAAAAJAAAABAAAAAkAAAAFAAAABQAAAAkA
AAAGAAAABgAAAAkAAAAIAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAA
AACAPx4AAAAEAAAADP5LPyb7Sz+YbI8/DP5LPwAAAACYbI8/IgGAP7v8fz8a938/DP5LP7v8
fz8a938/DP5LPwAAAADq738/IgGAPwAAAAAa938/EP7LPwAg5jgAwOU4IgGAP7v8fz8AwOU4
DP5LPy9wjz8AwOU4DP5LP/5ojz8e+Es/MAAAAAAAAAABAAAABQAAAAAAAAAFAAAAAgAAAAAA
AAACAAAAAwAAAAAAAAADAAAACQAAAAAAAAAJAAAACAAAAAAAAAAIAAAABAAAAAAAAAAEAAAA
AQAAAAEAAAAEAAAABQAAAAIAAAAFAAAABgAAAAIAAAAGAAAABwAAAAIAAAAHAAAACAAAAAIA
AAAIAAAACQAAAAIAAAAJAAAAAwAAAAQAAAAGAAAABQAAAAQAAAAIAAAABgAAAAYAAAAIAAAA
BwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8eAAAABAAAACIB
gD+7/H+/AAAAtAz+Sz8vcI+/AAAAtCIBgD+7/H+/vfx/vxD+yz8AAAA0AGDmuAz+Sz+XbI+/
KPtLvwz+Sz8AwOW4jfV/vwz+Sz+L9X+/jfV/vwz+Sz8m+0u/MHCPvyIBgD8AwOW4vfx/vwz+
Sz8AwOW4mGyPvzAAAAAAAAAAAQAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAAEAAAABAAAA
BAAAAAIAAAABAAAAAwAAAAUAAAABAAAABQAAAAkAAAABAAAACQAAAAcAAAABAAAABwAAAAYA
AAABAAAABgAAAAQAAAACAAAABAAAAAYAAAACAAAABgAAAAcAAAACAAAABwAAAAgAAAACAAAA
CAAAAAMAAAADAAAACAAAAAkAAAADAAAACQAAAAUAAAAHAAAACQAAAAgAAAAQAAAAAAAAAAAA
AAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/HgAAAAQAAAAM/ks/mGyPPwAAAAAiAYA/
vfx/PwAg5rgM/ks/MHCPPyb7S78M/ks/AAAAAIv1f78Q/ss/AAAAAAAg5rgiAYA/vfx/P7v8
f78M/ks/vfx/P7v8f78M/ks/AAAAAC9wj78iAYA/AAAAALv8f78M/ks/KPtLP/5oj78wAAAA
AAAAAAEAAAACAAAAAAAAAAIAAAAGAAAAAAAAAAYAAAAJAAAAAAAAAAkAAAAHAAAAAAAAAAcA
AAADAAAAAAAAAAMAAAAEAAAAAAAAAAQAAAABAAAAAQAAAAUAAAACAAAAAQAAAAQAAAAFAAAA
AgAAAAUAAAAGAAAAAwAAAAcAAAAIAAAAAwAAAAgAAAAEAAAABAAAAAgAAAAFAAAABQAAAAgA
AAAHAAAABQAAAAcAAAAJAAAABQAAAAkAAAAGAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAA
AAAAAAAAAAAAAAAAAACAPxgAAAAEAAAAVE+PvwAAAAAL/ks/EP7LvwAAAAAA0KI44jqPvw/+
S78L/ks/AAAAAHBUj78L/ks/AAAAAA/+y78AAMC0Yat/v2Crf78A0KI4Yat/v2Crf78L/ks/
EP5Lv+E6j78L/ks/JAAAAAAAAAABAAAAAgAAAAAAAAACAAAABgAAAAAAAAAGAAAABwAAAAAA
AAAHAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAAAQAAAAEAAAAEAAAABQAAAAEAAAAFAAAA
AgAAAAIAAAAFAAAABgAAAAMAAAAHAAAABAAAAAQAAAAHAAAABQAAAAUAAAAHAAAABgAAABAA
AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8eAAAABAAAAADgojgO/su/
AAAAtA3+Sz/+bY+/AAAAtAAAwLQAAAAAR9R/vwDgojhE1H+/R9R/vw3+Sz/+bY+/Ef5Lvw3+
Sz8AAAAAueh/vwDgojgAAAAAEP7Lvw3+Sz8O/ku/AG6Pvw3+Sz/v8n+/ueh/vw3+Sz8AAAAA
AG6PvzAAAAAAAAAAAQAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAEA
AAABAAAABAAAAAgAAAABAAAACAAAAAcAAAABAAAABwAAAAkAAAABAAAACQAAAAUAAAABAAAA
BQAAAAIAAAACAAAABgAAAAMAAAACAAAABQAAAAkAAAACAAAACQAAAAYAAAADAAAABgAAAAcA
AAADAAAABwAAAAgAAAADAAAACAAAAAQAAAAGAAAACQAAAAcAAAAQAAAAAAAAAAAAAAAAAAAA
AAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/GAAAAAQAAAAAACA1Ev7LPwAAALQAACO58fJ/Pyj9
fz8AACO5ABAjOQ7+yz8AACO5ABAjOUPUfz8T/su/AAAAtQAAALQr/X+/8fJ/PwAAALQr/X+/
8fJ/Pyj9fz9G1H+/ABAjOUPUfz8kAAAAAAAAAAEAAAACAAAAAAAAAAIAAAADAAAAAAAAAAMA
AAAEAAAAAAAAAAQAAAAFAAAAAAAAAAUAAAAGAAAAAAAAAAYAAAABAAAAAQAAAAYAAAACAAAA
AgAAAAYAAAAHAAAAAgAAAAcAAAAEAAAAAgAAAAQAAAADAAAABAAAAAcAAAAGAAAABAAAAAYA
AAAFAAAA</SharedString>
	</SharedStrings>
</roblox>